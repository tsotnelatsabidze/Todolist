// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoListApp.Services.Database;

#nullable disable

namespace TodoListApp.Services.Database.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231019162236_InitalMigration")]
    partial class InitalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TodoListApp.Services.TodoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsShared")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfTasks")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TodoList");
                });

            modelBuilder.Entity("TodoListApp.Services.TodoTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TodoTasks");
                });

            modelBuilder.Entity("TodoListApp.Services.TodoTaskTodoList", b =>
                {
                    b.Property<int>("TodoTaskId")
                        .HasColumnType("int");

                    b.Property<int>("TodoListId")
                        .HasColumnType("int");

                    b.HasKey("TodoTaskId", "TodoListId");

                    b.HasIndex("TodoListId");

                    b.ToTable("TodoTaskTodoLists");
                });

            modelBuilder.Entity("TodoListApp.Services.Database.Entities.TodoListEntity", b =>
                {
                    b.HasBaseType("TodoListApp.Services.TodoList");

                    b.ToTable("todo_list");
                });

            modelBuilder.Entity("TodoListApp.Services.TodoTaskTodoList", b =>
                {
                    b.HasOne("TodoListApp.Services.TodoList", "TodoList")
                        .WithMany("TodoTaskTodoLists")
                        .HasForeignKey("TodoListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoListApp.Services.TodoTask", "TodoTask")
                        .WithMany("TodoTaskTodoLists")
                        .HasForeignKey("TodoTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TodoList");

                    b.Navigation("TodoTask");
                });

            modelBuilder.Entity("TodoListApp.Services.Database.Entities.TodoListEntity", b =>
                {
                    b.HasOne("TodoListApp.Services.TodoList", null)
                        .WithOne()
                        .HasForeignKey("TodoListApp.Services.Database.Entities.TodoListEntity", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoListApp.Services.TodoList", b =>
                {
                    b.Navigation("TodoTaskTodoLists");
                });

            modelBuilder.Entity("TodoListApp.Services.TodoTask", b =>
                {
                    b.Navigation("TodoTaskTodoLists");
                });
#pragma warning restore 612, 618
        }
    }
}
